#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
搜索引擎原理简介：

搜索引擎：一个搜索引擎由搜索器、索引器、检索器 和 用户接口四个部分组成。

用户接口：网页和APP前端界面的交互。
搜索器：爬虫，在互联网上大量爬取网站内容，送给索引器。
索引器：对内容处理，形成索引，存储于内部的数据库等待检索。
检索器：检索器高效检索后，将结果返回给用户。

专有名词：
        语料: query
        词频，
        NLP: 自然语言处理，
        Bow Model，即 Bag of Words Model，中文叫做词袋模型。这是 NLP 领域最常见最简单的模型之一。

SearchEngingBase 基础框架搭建：
    1、add_corpus 函数：读取文件内容，将文件路径作为id, 连同内容一起送到 索引器中。
    2、索引器 process_corpus() 函数：建立索引。
    3、检索器 search() 函数：给定一个询问，处理询问，再通过索引检索，返回。

BowInvertedIndexEngine 模型实现：
    1、 NLP 单词处理
    2、 倒序索引：word->id 的字典 存储起来，避免了每次遍历所有 文件查找 单词。unique ID 生成器对每一篇文章标记上不同的 ID，倒序索引也应该按照这个 unique_id 排序。
    3、 拿到所有的倒序索引之后，运行 "合并 K 个有序数组" 的算法，从中拿到我们想要的 ID，并返回。最优的 "合并 K 个有序数组" 的算法需要用最小堆来存储 index.
    4、 实现搜索的单词在文中离得近一些：在倒序索引集合上，对于每篇文章保存单词的位置信息。在合并操作的时候根据位置信息判断就可以了。
"""

